name: Docker build on tag
env:
        DOCKER_CLI_EXPERIMENTAL: enabled
        TAG_FMT: '^refs/tags/(((.?[0-9]+){3,4}))$'

on:
        push:
                tags: [ '*' ]

jobs:
        build:
                runs-on: ubuntu-18.04
                name: Build Spotifyd
                steps:
                        - name: Setup Environment
                          run: |
                                  echo ::set-env name=TAG::${GITHUB_REF/refs\/tags\//}
                                  echo ::set-env name=TAG::${GITHUB_REF/refs\/tags\//}
                                  echo "::set-env name=SHORTSHA::$(git rev-parse --short HEAD)"
                                  echo "::set-env name=DOCKER_HUB_REPO::spotifyd"                                  
                                  echo "::set-env name=MAINTAINER_USER::${{ secrets.MAINTAINER_USER }}"
                                  echo "::set-env name=MAINTAINER_TOKEN::${{ secrets.MAINTAINER_TOKEN }}"

                        - name: Show set environment variables
                          run: |
                                  printf "    TAG: %s\n"  "$TAG"
                                  printf "    COMMIT ID: %s\n" "$GITHUB_SHA"
                                  printf "    DOCKER REPO: %s\n" "$DOCKER_HUB_REPO"
                                  printf "    GITHUB_ACTOR: %s\n" "$GITHUB_ACTOR"
                                  printf "    GITHUB_REPOSITORY: %s\n" "$GITHUB_REPOSITORY"
                                  
                        - name: Login to Docker Hub
                          run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

                        - name: Checkout project
                          uses: actions/checkout@v2

                        - name: Setup Docker buildx action
                          uses: crazy-max/ghaction-docker-buildx@v1
                          id: buildx
                          with:
                                  buildx-version: latest
                                  qemu-version: latest

                        - name: Show available Docker buildx platforms
                          run: echo ${{ steps.buildx.outputs.platforms }}

                        - name: Cache Docker layers
                          uses: actions/cache@v2
                          id: cache
                          with:
                            path: /tmp/.buildx-cache
                            key: ${{ runner.os }}-buildx-${{ github.sha }}
                            restore-keys: |
                              ${{ runner.os }}-buildx-


                        - name: Run Docker buildx against the tag (spotifyd)
                          run: |
                                  docker buildx build \
                                  --cache-from "type=local,src=/tmp/.buildx-cache" \
                                  --cache-to "type=local,dest=/tmp/.buildx-cache" \
                                  --build-arg VERSION=$TAG \
                                  --platform linux/amd64,linux/arm64 \
                                  --tag ${{ secrets.DOCKER_HUB_USER }}/$DOCKER_HUB_REPO:$TAG \
                                  --output "type=registry" .

                        - name: build against latest (spotifyd)
                          run: |
                                  docker buildx build \
                                  --cache-from "type=local,src=/tmp/.buildx-cache" \
                                  --cache-to "type=local,dest=/tmp/.buildx-cache" \
                                  --build-arg VERSION=$TAG \
                                  --platform linux/amd64,linux/arm64 \
                                  --tag ${{ secrets.DOCKER_HUB_USER }}/$DOCKER_HUB_REPO:latest \
                                  --output "type=registry" .

                        - name: Login and push (tag to GHCR with MAINTAINER_USER and MAINTAINER_TOKEN if exists
                          run: |
                                  if [[ ! -z $MAINTAINER_TOKEN ]] && [[ ! -z $MAINTAINER_USER ]]; then  
                                        echo "$MAINTAINER_TOKEN" | docker login https://ghcr.io -u "$MAINTAINER_USER" --password-stdin
                                        docker buildx build \
                                                --cache-from "type=local,src=/tmp/.buildx-cache" \
                                                --cache-to "type=local,dest=/tmp/.buildx-cache" \
                                                --build-arg VERSION=$TAG \
                                                --platform linux/amd64,linux/arm64,linux/arm/v7 \
                                                --tag ghcr.io/${{ secrets.DOCKER_HUB_USER}}/$DOCKER_HUB_REPO:$TAG \
                                                --output "type=registry" .
                                        docker buildx build \
                                                --cache-from "type=local,src=/tmp/.buildx-cache" \
                                                --cache-to "type=local,dest=/tmp/.buildx-cache" \
                                                --build-arg VERSION=$TAG \
                                                --platform linux/amd64,linux/arm64,linux/arm/v7 \
                                                --tag ghcr.io/${{ secrets.DOCKER_HUB_USER }}/$DOCKER_HUB_REPO:latest \
                                                --output "type=registry" .                                                 
                                  else
                                        echo "MAINTAINER_TOKEN and MAINTAINER_USER do no exist! Skipping!"
                                  fi

